name: Nightly Build

on:
  workflow_dispatch:
#  schedule:
#    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout nightly config repository
        uses: actions/checkout@v4
        with:
          path: nightly-config

      - name: Checkout main rikkahub repository
        uses: actions/checkout@v4
        with:
          repository: EricLeeaaaaa/rikkahub
          path: rikkahub

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('rikkahub/**/*.gradle*', 'rikkahub/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Apply nightly patch
        run: |
          # Find all strings.xml files and replace the app_name.
          find rikkahub/app/src/main/res -name strings.xml -exec \
            sed -i 's|\(<string name="app_name">\).*\(</string>\)|\1Rikkahub Nightly\2|' {} +

          # Append the rest of the configuration.
          echo "" >> rikkahub/app/build.gradle.kts
          cat nightly-config/patch/nightly.gradle.kts >> rikkahub/app/build.gradle.kts
          
          # Copy the dummy google-services.json for the nightly package name.
          cp nightly-config/patch/google-services.json rikkahub/app/google-services.json

      - name: Make gradlew executable
        run: chmod +x rikkahub/gradlew

      - name: Build Release APK
        env:
          GRADLE_OPTS: "-Xmx4g -Dkotlin.daemon.jvm.options=-Xmx4g"
        run: |
          cd rikkahub
          ./gradlew --no-daemon --parallel --build-cache --configuration-cache assembleRelease --stacktrace

      - name: Generate timestamp
        id: timestamp
        run: echo "BUILD_TIMESTAMP=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_TIMESTAMP }}-nightly
          path: rikkahub/app/build/outputs/apk/release/*.apk
